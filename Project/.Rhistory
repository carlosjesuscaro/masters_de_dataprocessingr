source("~/Data/DSTI/DataEngineering/DataProcessingR/Project/refresher.R")
messages %>%
filter(date >= as.Date("2000-01-01") & date <= as.Date('2002-12-31')) %>%
pull(date) %>% min()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(wordcloud)
library(tidyverse)
library(wordcloud)
library(tidyverse)
library(wordcloud)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(wordcloud)
load('Enron.Rdata')
employees <- as.data.frame(employeelist)
messages <- as.data.frame(message)
recipients <- as.data.frame(recipientinfo)
employees_cols <- paste(colnames(employees), collapse = ", ")
sprintf("`employees` data frame column names: %s", employees_cols)
messages_cols <- paste(colnames(messages), collapse = ", ")
sprintf("`messages` data frame column names: %s", messages_cols)
recipients_cols <- paste(colnames(recipients), collapse = ", ")
sprintf("`recipients` data frame column names: %s", recipients_cols)
check_duplicates <- function(df, col_id) {
rep <- df %>%
group_by({{ col_id }}) %>%
count() %>%
filter(n > 1) %>%
nrow()
return(rep)
}
sprintf("Number of duplicated IDs in `employees` data frame: %d", check_duplicates(employees, eid))
sprintf("Number of duplicated IDs in `messages` data frame: %d", check_duplicates(messages, mid))
sprintf("Number of duplicated IDs in `recipients` data frame: %d", check_duplicates(recipients, rid))
messages %>%
filter(date >= as.Date("2000-01-01") & date <= as.Date('2002-12-31')) %>%
pull(date) %>% min()
messages %>%
filter(date >= as.Date("2001-01-01") & date <= as.Date('2002-12-31')) %>%
pull(date) %>% min()
messages %>%
filter(date >= as.Date("1999-01-01") & date <= as.Date('2002-12-31')) %>%
nrow()
length(messages)
length(messages$date)
messages <- messages %>%
filter(date >= as.Date('1999-01-01') & date <= as.Date('2002-12-31'))
sprintf("Number of messages between these years: %d", length(messages$date))
year(messages$date[1])
month(messages$date[1])
format(messages$date[1], "%Y-%m")
messages <- messages %>%
mutate(
year = year(date),
year_month = format(date, "%Y-%m")
)
colnames(messages)
messages %>%
group_by(year_month) %>%
count()
messages %>%
group_by(year) %>%
count()
messages %>%
group_by(year) %>%
count() %>%
rename('NumMessages', n)
messages %>%
group_by(year) %>%
count() %>%
rename(NumMessages, n)
messages %>%
group_by(year) %>%
count() %>%
rename('NumMessages', n)
messages %>%
group_by(year) %>%
count() %>%
rename('NumMessages' = n)
messages %>%
filter(year == 2001) %>%
group_by(year_month) %>%
count()
count_2001 <- messages %>%
filter(year == 2001) %>%
group_by(year_month) %>%
count() %>%
rename('NumMessages' = n)
count_2001 <- messages %>%
filter(year == 2001) %>%
group_by(year_month) %>%
count() %>%
rename('NumMessages' = n)
count_2001 <- messages %>%
filter(year == 2001) %>%
group_by(year_month) %>%
count() %>%
rename('NumMessages' = n)
ggplot(data = count_2001, aes(x = year_month, y = NumMessages)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Number of Messages by Month in 2001",
x = "Month",
y = "Number of Messages"
)
source("~/.active-rstudio-document", echo = TRUE)
colnames(messages)
colnames(recipients)
messages$sender[1:5]
messages[1, c("mid", "message_id")]
head(messages$message_id)
colnames(employees)
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(employee_id, email_address) %>%
drop_na()
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address) %>%
drop_na()
length(employee_lookup)
head(employee_lookup)
colnames(messages)
colnames(recipients)
recipients$rvalue[1:3]
recipients$rvalue[1]
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address) %>%
drop_na()
qq <- messages %>%
left_join(employee_lookup, by = c('sender' == 'email_address'))
qq <- messages %>%
left_join(employee_lookup, by = c('sender' = 'email_address'))
colnames(qq)
# 1. Since each employee can have many email address, let's create a look up table
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address, status) %>%
drop_na()
# 2. Adding the employee ID to the messages data frame
messages %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status', status)
# 1. Since each employee can have many email address, let's create a look up table
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address, status) %>%
drop_na()
# 2. Adding the employee ID to the messages data frame
messages %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status' = status)
# 3. Adding the employee ID to the recipient data frame
recipients %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('recipient_id' = eid, 'recipient_status' = status)
colnames(recipients)
# 1. Since each employee can have many email address, let's create a look up table
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address, status) %>%
drop_na()
# 2. Adding the employee ID to the messages data frame
messages %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status' = status)
# 3. Adding the employee ID to the recipient data frame
recipients %>%
left_join(employee_lookup, by = c("rvalue" = "email_address")) %>%
rename('recipient_id' = eid, 'recipient_status' = status)
# 4. Joining messages and recipients data frames
complete <- inner_join(messages, recipients, by='mid')
colnames(complete)
colnames(messages)
# 1. Since each employee can have many email address, let's create a look up table
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address, status) %>%
drop_na()
# 2. Adding the employee ID to the messages data frame
messages %>%
mutate(
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status' = status)
)
messages %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status' = status)
colnames(messages)
# 1. Since each employee can have many email address, let's create a look up table
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address, status) %>%
drop_na()
# 2. Adding the employee ID to the messages data frame
messages <- messages %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status' = status)
# 3. Adding the employee ID to the recipient data frame
recipients <- recipients %>%
left_join(employee_lookup, by = c("rvalue" = "email_address")) %>%
rename('recipient_id' = eid, 'recipient_status' = status)
# 4. Joining messages and recipients data frames
complete <- inner_join(messages, recipients, by='mid')
colnames(complete)
# 1. Since each employee can have many email address, let's create a look up table
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address, status) %>%
drop_na()
# 2. Adding the employee ID to the messages data frame
messages <- messages %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status' = status)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(wordcloud)
load('Enron.Rdata')
employees <- as.data.frame(employeelist)
messages <- as.data.frame(message)
recipients <- as.data.frame(recipientinfo)
employees_cols <- paste(colnames(employees), collapse = ", ")
sprintf("`employees` data frame column names: %s", employees_cols)
messages_cols <- paste(colnames(messages), collapse = ", ")
sprintf("`messages` data frame column names: %s", messages_cols)
recipients_cols <- paste(colnames(recipients), collapse = ", ")
sprintf("`recipients` data frame column names: %s", recipients_cols)
check_duplicates <- function(df, col_id) {
rep <- df %>%
group_by({{ col_id }}) %>%
count() %>%
filter(n > 1) %>%
nrow()
return(rep)
}
sprintf("Number of duplicated IDs in `employees` data frame: %d", check_duplicates(employees, eid))
sprintf("Number of duplicated IDs in `messages` data frame: %d", check_duplicates(messages, mid))
sprintf("Number of duplicated IDs in `recipients` data frame: %d", check_duplicates(recipients, rid))
messages <- messages %>%
filter(date >= as.Date('1999-01-01') & date <= as.Date('2002-12-31'))
sprintf("Number of messages between these years: %d", length(messages$date))
messages <- messages %>%
mutate(
year = year(date),
year_month = format(date, "%Y-%m")
)
# 1. Since each employee can have many email address, let's create a look up table
employee_lookup <- employees %>%
pivot_longer(
cols = starts_with("Email"),
names_to = "email_type",
values_to = "email_address"
) %>%
select(eid, email_address, status) %>%
drop_na()
# 2. Adding the employee ID to the messages data frame
messages <- messages %>%
left_join(employee_lookup, by = c("sender" = "email_address")) %>%
rename('sender_id' = eid, 'sender_status' = status)
# 3. Adding the employee ID to the recipient data frame
recipients <- recipients %>%
left_join(employee_lookup, by = c("rvalue" = "email_address")) %>%
rename('recipient_id' = eid, 'recipient_status' = status)
# 4. Joining messages and recipients data frames
complete <- inner_join(messages, recipients, by='mid')
messages %>%
group_by(year) %>%
count() %>%
rename('NumMessages' = n)
count_2001 <- messages %>%
filter(year == 2001) %>%
group_by(year_month) %>%
count() %>%
rename('NumMessages' = n)
ggplot(data = count_2001, aes(x = year_month, y = NumMessages)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Number of Messages by Month in 2001",
x = "Month",
y = "Number of Messages"
)
